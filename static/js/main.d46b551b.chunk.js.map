{"version":3,"sources":["assets/img/blank-avatar.jpg","assets/img/cooper.png","assets/img/benjamin.jpg","Header.jsx","Navbar.jsx","assets/news.jsx","components/page-header.jsx","pages/Home.jsx","assets/team.jsx","pages/About.jsx","Footer.jsx","pages/FourOFour.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Header","Jumbotron","className","NavbarComponent","Navbar","bg","expand","to","process","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","news","title","timestamp","content","PageHeader","children","Home","posts","map","item","i","key","Date","toLocaleString","team","img","blankAvatar","name","role","description","cooper","benjamin","About","cards","member","Card","Img","variant","src","Body","Title","Subtitle","Text","Container","Footer","FourOFour","href","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d46b551b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blank-avatar.55330f08.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cooper.23f370d9.png\";","module.exports = __webpack_public_path__ + \"static/media/benjamin.d3602f91.jpg\";","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\n\nfunction Header() {\n  return (\n    <header>\n      <Jumbotron className=\"mb-0 bg-info text-primary\">\n        <h2 className=\"display-2\">Project Hackathon</h2>\n        <p className=\"lead\">The Best (and Also First) Hackathon Run by Campo Students for the Community</p>\n      </Jumbotron>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nfunction NavbarComponent() {\n  return (\n    <Navbar bg=\"secondary\" expand=\"lg\">\n      <LinkContainer to={process.env.PUBLIC_URL}>\n        <Navbar.Brand className=\"text-primary\">ProjHack</Navbar.Brand>\n      </LinkContainer>\n      <Navbar.Toggle aria-controls=\"navbar-collapsable\" />\n      <Navbar.Collapse id=\"navbar-collapsable\">\n        <Nav className=\"mr-auto\">\n          <LinkContainer to={process.env.PUBLIC_URL}>\n            <Nav.Link className=\"text-primary\">Home</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to={`${process.env.PUBLIC_URL}/about`}>\n            <Nav.Link className=\"text-primary\">About</Nav.Link>\n          </LinkContainer>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default NavbarComponent;\n","const news = [\n  {\n    title: 'Beginning of the Planning Phase',\n    timestamp: 'Sat, 20 Jun 2020 00:53:03 GMT',\n    content: `\n      This marks the creation of this website and the beginning of the arduous,\n      but hopefully valuable, process of planning Project Hackathon. Our team is\n      excited to try to bring all out attendees the best experience possible\n      at this event, and will try our uptmost to make it a success.\n    `,\n  },\n];\n\nexport default news;","import React from 'react';\n\nfunction PageHeader({ children }) {\n  return (\n    <h1 className=\"pb-2 border-bottom\">{children}</h1>\n  )\n}\n\nexport default PageHeader;","import React from 'react';\nimport news from '../assets/news';\nimport PageHeader from '../components/page-header';\n\nfunction Home() {\n  const posts = news.map((item, i) => {\n    const { title, timestamp, content } = item;\n\n    return (\n      <div className=\"news-item\" key={i}>\n        {i > 0 && <hr />}\n        <h3>{title}</h3>\n        <p className=\"text-muted mb-1\">\n          Last modified: {new Date(timestamp).toLocaleString()}\n        </p>\n        <p>{content}</p>\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <PageHeader>Latest News</PageHeader>\n      {posts}\n    </>\n  );\n}\n\nexport default Home;","import blankAvatar from './img/blank-avatar.jpg';\nimport cooper from './img/cooper.png';\nimport benjamin from './img/benjamin.jpg';\n\nconst team = [\n  {\n    img: blankAvatar,\n    name: 'Edward Lee',\n    role: 'Operating Officer',\n    description: `\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n      do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    `,\n  },\n  {\n    img: blankAvatar,\n    name: 'Richard Dao',\n    role: 'Administrative Officer',\n    description: `\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n      do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    `,\n  },\n  {\n    img: blankAvatar,\n    name: 'Justin Xiao',\n    role: 'Media and Design Officer',\n    description: `\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n      do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    `,\n  },\n  {\n    img: blankAvatar,\n    name: 'Sahaana Rajesh',\n    role: 'Financial Officer',\n    description: `\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n      do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    `,\n  },\n  {\n    img: cooper,\n    name: 'Cooper Schnuur',\n    role: 'Marketing Officer',\n    description: `\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n      do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    `,\n  },\n  {\n    img: benjamin,\n    name: 'Benjamin Hinchliff',\n    role: 'Technology Officer',\n    description: `\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n      do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    `,\n  },\n  {\n    img: blankAvatar,\n    name: 'Inan Xu',\n    role: 'Website Officer',\n    description: `\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n      do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n    `,\n  },\n];\n\nexport default team;","import React from 'react';\nimport { Container, Card } from 'react-bootstrap';\nimport PageHeader from '../components/page-header';\nimport team from '../assets/team';\nimport './About.scss';\n\nfunction About() {\n  const cards = team.map((member, i) => {\n    const { img, name, role, description } = member;\n\n    return (\n      <Card className=\"team-card m-2\" key={i}>\n        <Card.Img variant=\"top\" src={img} />\n        <Card.Body>\n          <Card.Title>{name}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">{role}</Card.Subtitle>\n          <Card.Text>\n            {description}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  });\n\n  return (\n    <>\n      <PageHeader>Our Team</PageHeader>\n      <Container className=\"d-flex flex-wrap\">\n        {cards}\n      </Container>\n    </>\n  );\n}\n\nexport default About;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer>\n      <h6 className=\"display-6 text-muted text-center\">&copy; 2020, Benjamin Hinchliff, All Rights Reserved</h6>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction FourOFour() {\n  return (\n    <>\n      <h1 className=\"display-1 text-center\">404</h1>\n      <p className=\"lead\">\n        That means this page doesn't exist. Please check the URL.\n        If you have any questions or concerns contact the developer at\n        <address href=\"mailto:benjamin.hinchliff@gmail.com\">benjamin.hinchliff@gmail.com</address>\n      </p>\n    </>\n  )\n}\n\nexport default FourOFour;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\nimport Header from './Header';\r\nimport NavbarComponent from './Navbar';\r\nimport Home from './pages/Home';\r\nimport About from './pages/About';\r\nimport Footer from './Footer';\r\nimport FourOFour from './pages/FourOFour';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Container>\r\n        <Header />\r\n        <NavbarComponent />\r\n        <Container className=\"page-content bg-light pb-2\">\r\n          <Switch>\r\n            <Route exact path={`${process.env.PUBLIC_URL}/about`} component={About} />\r\n            <Route exact path={process.env.PUBLIC_URL} component={Home} />\r\n            <Route component={FourOFour} />\r\n          </Switch>\r\n        </Container>\r\n        <Footer />\r\n      </Container>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}